/* Author: Drew Chase */
async function buildAddAppOptionsFromTemplate(e){async function t(e,t){const o=t[1],a=$(`dialog#add-item-modal #template-options [label="${o}"]`);a.on("change",async()=>{const o=a.val(),i=e.replace(t[0],encodeURIComponent(o)),l=await n(i);element.options=l.map(e=>new DropdownOption(e,e,!1)),element.rerender()})}async function n(e){try{return startLoading(),await $.ajax({url:e,method:"GET",dataType:"json"})}catch(e){return console.log(e),alert(`Error: ${e}`),null}finally{stopLoading()}}const o=await getTemplateJson(e),a=$("#template-options");a.empty(),a.append(`<h2>${o.name}</h2>`),a.append(`<p style="text-align: center; font-size: 1.5rem; margin-top: 10px; margin-bottom: 1rem;">${o.description}</p>`);for(const e of o.options){e.name.toLowerCase().replace(/[^a-z]/g,"-");let i;switch(e.type){case"select":if(e.populated_from_url){const o=e.populated_from_url;if(o.includes("{")){const n=/{([^}]+)}/g,a=[...o.matchAll(n)];for(const e of a)await t(o,e);(i=new Dropdown(e.name,[])).title=e.description;break}const a=await n(o);(i=new Dropdown(e.name,a.map(e=>new DropdownOption(e,e,!1)))).title=e.description;break}const a=e.options.map(t=>new DropdownOption(t.name,t.value,t.value==e.default));(i=new Dropdown(e.name,a)).title=e.description;break;case"boolean":(i=new Toggle(e.name,e.default)).title=e.description;const l=o.options.filter(t=>t.condition&&t.condition==e.name),r=e=>{l.forEach(t=>{const n=t.element;n&&$(n).css("display",e?"block":"none")})};$(i).on("toggle",(e,t)=>{r(t.value)}),$(document).on("finish-building-options",()=>{r(i.value)});break;case"text":i=buildInputElement("text",e);break;case"number":i=buildInputElement("number",e);break;case"color":i=buildColorInputElement(e);break;case"date":case"time":case"datetime":i=buildInputElement(e.type,e);break;case"textarea":i=buildTextareaElement(e);break;case"file":i=$(`<file-input name="${e.name}" description="${e.description}" extensions="${e.extensions.join(",")}" multiple="${e.multiple}" default="${e.default}"></file-input>`);break;case"array":i=$(`<array-input name="${e.name}" description="${e.description}" default="${e.default.join(",")}"></array-input>`)}e.element=i,a.append(i)}a.append("<div class='row center vertical fill' style='margin-top: 1rem;'><button id='add-item' type='submit' style='margin: auto;width: 200px;'>Add</button></div>"),$(document).trigger("finish-building-options")}function buildInputElement(e,t){const n=t.name.toLowerCase().replace(/[^a-z]/g,"-"),o=$(`<div class="floating-input col" id="${n}"></div>`),a=$(`<label for="${t.name}">${t.name}</label>`),i=$(`<input type="${e}" placeholder="${t.description}" name="${t.name}" value="${t.default}">`);return i.title=t.description,o.append(i),o.append(a),o}function buildColorInputElement(e){const t=$('<div class="color-input center vertical row"></div>'),n=$(`<label for="${e.name}" class='fill'>${e.name}</label>`),o=$(`<input type="color" placeholder="${e.description}" name="${e.name}" value="${e.default}">`);return t.attr("title",e.description),t.append(n),t.append(o),t}function buildTextareaElement(e){e.name.toLowerCase().replace(/[^a-z]/g,"-");const t=$('<div class="floating-input col"></div>'),n=$(`<label for="${e.name}">${e.name}</label>`),o=$(`<textarea type="text" placeholder="${e.description}" name="${e.name}">${e.default}</textarea>`);return o.title=e.description,t.append(o),t.append(n),t}async function getTemplateJson(e){return await $.ajax({url:`/templates/${e}/template.json`,method:"GET",dataType:"json",beforeSend:()=>{startLoading()},complete:()=>{stopLoading()},success:e=>e,error:(e,t,n)=>(console.log(n),alert(`Error: ${n}`),null)})}import Dropdown from"./doms/Dropdown.js";import Toggle from"./doms/Toggle.js";import DropdownOption from"./doms/DropdownOption.js";import ArrayInput from"./doms/ArrayItem.js";import FileInput from"./doms/FileInput.js";$("dialog#add-item-modal drop-down#template").on("change",(e,t)=>{buildAddAppOptionsFromTemplate(t.value)}),$("dialog#add-item-modal drop-down#template dropdown-option")[1].click();